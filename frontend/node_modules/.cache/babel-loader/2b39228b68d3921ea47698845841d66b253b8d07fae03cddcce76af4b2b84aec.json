{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aswathi Valsan\\\\React_trial\\\\pythonProject1\\\\frontend\\\\src\\\\verdict.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Verdict() {\n  _s();\n  const [text, setText] = useState('');\n  const [result, setResult] = useState(null);\n  const handleAnalyze = async () => {\n    const response = await fetch('http://localhost:5000/api/analyze', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        text\n      })\n    });\n    const data = await response.json();\n    setResult(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"6\",\n      placeholder: \"Enter text to analyze...\",\n      value: text,\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAnalyze,\n      children: \"Analyze\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Major Emotion: \", result.major_emotion]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.entries(result.emotions).map(_ref => {\n          let [emotion, prob] = _ref;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [emotion, \": \", prob.toFixed(2), \"%\"]\n          }, emotion, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(Verdict, \"Czd0IEWoNkA9qAubHi9FO9OdgtQ=\");\n_c = Verdict;\nexport default Verdict;\nvar _c;\n$RefreshReg$(_c, \"Verdict\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Verdict","_s","text","setText","result","setResult","handleAnalyze","response","fetch","method","headers","body","JSON","stringify","data","json","children","rows","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","major_emotion","Object","entries","emotions","map","_ref","emotion","prob","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/Aswathi Valsan/React_trial/pythonProject1/frontend/src/verdict.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Verdict() {\r\n  const [text, setText] = useState('');\r\n  const [result, setResult] = useState(null);\r\n\r\n  const handleAnalyze = async () => {\r\n    const response = await fetch('http://localhost:5000/api/analyze', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ text })\r\n    });\r\n    const data = await response.json();\r\n    setResult(data);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <textarea\r\n        rows=\"6\"\r\n        placeholder=\"Enter text to analyze...\"\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n      />\r\n      <button onClick={handleAnalyze}>Analyze</button>\r\n\r\n      {result && (\r\n        <div className=\"result\">\r\n          <h2>Major Emotion: {result.major_emotion}</h2>\r\n          <ul>\r\n            {Object.entries(result.emotions).map(([emotion, prob]) => (\r\n              <li key={emotion}>\r\n                {emotion}: {(prob).toFixed(2)}%\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Verdict;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;MAChEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEX;MAAK,CAAC;IAC/B,CAAC,CAAC;IACF,MAAMY,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClCV,SAAS,CAACS,IAAI,CAAC;EACjB,CAAC;EAED,oBACEf,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MACEkB,IAAI,EAAC,GAAG;MACRC,WAAW,EAAC,0BAA0B;MACtCC,KAAK,EAAEjB,IAAK;MACZkB,QAAQ,EAAGC,CAAC,IAAKlB,OAAO,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACF3B,OAAA;MAAQ4B,OAAO,EAAErB,aAAc;MAAAU,QAAA,EAAC;IAAO;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAE/CtB,MAAM,iBACLL,OAAA;MAAK6B,SAAS,EAAC,QAAQ;MAAAZ,QAAA,gBACrBjB,OAAA;QAAAiB,QAAA,GAAI,iBAAe,EAACZ,MAAM,CAACyB,aAAa;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC9C3B,OAAA;QAAAiB,QAAA,EACGc,MAAM,CAACC,OAAO,CAAC3B,MAAM,CAAC4B,QAAQ,CAAC,CAACC,GAAG,CAACC,IAAA;UAAA,IAAC,CAACC,OAAO,EAAEC,IAAI,CAAC,GAAAF,IAAA;UAAA,oBACnDnC,OAAA;YAAAiB,QAAA,GACGmB,OAAO,EAAC,IAAE,EAAEC,IAAI,CAAEC,OAAO,CAAC,CAAC,CAAC,EAAC,GAChC;UAAA,GAFSF,OAAO;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEZ,CAAC;QAAA,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACzB,EAAA,CAtCQD,OAAO;AAAAsC,EAAA,GAAPtC,OAAO;AAwChB,eAAeA,OAAO;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}